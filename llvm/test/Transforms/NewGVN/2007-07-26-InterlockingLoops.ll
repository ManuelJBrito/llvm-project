; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 2
; RUN: opt < %s -passes=newgvn -S | FileCheck %s

@last = external global [65 x ptr]

define i32 @NextRootMove(i32 %wtm, i32 %x, i32 %y, i32 %z) {
; CHECK-LABEL: define i32 @NextRootMove
; CHECK-SAME: (i32 [[WTM:%.*]], i32 [[X:%.*]], i32 [[Y:%.*]], i32 [[Z:%.*]]) {
; CHECK-NEXT:  entry:
; CHECK-NEXT:    [[A:%.*]] = alloca ptr, align 8
; CHECK-NEXT:    [[TMP17618:%.*]] = load ptr, ptr getelementptr ([65 x ptr], ptr @last, i32 0, i32 1), align 4
; CHECK-NEXT:    store ptr [[TMP17618]], ptr [[A]], align 8
; CHECK-NEXT:    br label [[COND_TRUE116:%.*]]
; CHECK:       cond_true116:
; CHECK-NEXT:    [[CMP:%.*]] = icmp eq i32 [[X]], [[Y]]
; CHECK-NEXT:    br i1 [[CMP]], label [[COND_TRUE128:%.*]], label [[COND_TRUE145:%.*]]
; CHECK:       cond_true128:
; CHECK-NEXT:    [[CMP1:%.*]] = icmp eq i32 [[X]], [[Z]]
; CHECK-NEXT:    br i1 [[CMP1]], label [[COND_TRUE128_BB98_BACKEDGE_CRIT_EDGE:%.*]], label [[COND_TRUE128_RETURN_LOOPEXIT_CRIT_EDGE:%.*]]
; CHECK:       cond_true128.return.loopexit_crit_edge:
; CHECK-NEXT:    br label [[RETURN_LOOPEXIT:%.*]]
; CHECK:       cond_true128.bb98.backedge_crit_edge:
; CHECK-NEXT:    br label [[BB98_BACKEDGE:%.*]]
; CHECK:       bb98.backedge:
; CHECK-NEXT:    br label [[COND_TRUE116]]
; CHECK:       cond_true145:
; CHECK-NEXT:    br i1 false, label [[COND_TRUE145_BB98_BACKEDGE_CRIT_EDGE:%.*]], label [[COND_TRUE145_RETURN_LOOPEXIT_CRIT_EDGE:%.*]]
; CHECK:       cond_true145.return.loopexit_crit_edge:
; CHECK-NEXT:    br label [[RETURN_LOOPEXIT]]
; CHECK:       cond_true145.bb98.backedge_crit_edge:
; CHECK-NEXT:    store i8 poison, ptr null, align 1
; CHECK-NEXT:    br label [[BB98_BACKEDGE]]
; CHECK:       return.loopexit:
; CHECK-NEXT:    ret i32 0
;
entry:
  %A = alloca ptr
  %tmp17618 = load ptr, ptr getelementptr ([65 x ptr], ptr @last, i32 0, i32 1), align 4
  store ptr %tmp17618, ptr %A
  br label %cond_true116

cond_true116:
  %cmp = icmp eq i32 %x, %y
  br i1 %cmp, label %cond_true128, label %cond_true145

cond_true128:
  %tmp17625 = load ptr, ptr getelementptr ([65 x ptr], ptr @last, i32 0, i32 1), align 4
  store ptr %tmp17625, ptr %A
  %cmp1 = icmp eq i32 %x, %z
  br i1 %cmp1 , label %bb98.backedge, label %return.loopexit

bb98.backedge:
  br label %cond_true116

cond_true145:
  %tmp17631 = load ptr, ptr getelementptr ([65 x ptr], ptr @last, i32 0, i32 1), align 4
  store ptr %tmp17631, ptr %A
  br i1 false, label %bb98.backedge, label %return.loopexit

return.loopexit:
  br label %return

return:
  ret i32 0
}
