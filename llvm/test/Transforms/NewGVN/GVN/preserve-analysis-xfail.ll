; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; XFAIL: *
; RUN: opt < %s -debug-pass-manager -passes='require<domtree>,loop(loop-simplifycfg),newgvn,loop(indvars)' 2>&1 -S | FileCheck --check-prefix=NEW-PM --check-prefix=IR %s

; Check CFG-only analysis are preserved by SCCP by running it between 2
; loop-vectorize runs.

; CHECK: Dominator Tree Construction
; CHECK: Natural Loop Information
; CHECK: Canonicalize natural loops
; CHECK: LCSSA Verifier
; CHECK: Loop-Closed SSA Form Pass
; CHECK: Global Value Numbering
; CHECK-NOT: Dominator Tree Construction
; CHECK-NOT: Natural Loop Information
; CHECK: Canonicalize natural loops

; NEW-PM-DAG: Running analysis: LoopAnalysis on test
; NEW-PM-DAG: Running analysis: DominatorTreeAnalysis on test
; NEW-PM: Running pass: newgvnPass on test
; NEW-PM-NOT: Running analysis: LoopAnalysis on test
; NEW-PM-NOT: Running analysis: DominatorTreeAnalysis on test

declare i1 @cond()
declare void @dostuff()

define i32 @test() {
; NEW-PM-LABEL: define i32 @test() {
; NEW-PM-NEXT:  [[ENTRY:.*]]:
; NEW-PM-NEXT:    br label %[[HEADER:.*]]
; NEW-PM:       [[HEADER]]:
; NEW-PM-NEXT:    [[IV:%.*]] = phi i32 [ 11, %[[ENTRY]] ], [ 0, %[[LATCH:.*]] ]
; NEW-PM-NEXT:    br i1 false, label %[[THEN:.*]], label %[[LATCH]]
; NEW-PM:       [[THEN]]:
; NEW-PM-NEXT:    call void @dostuff()
; NEW-PM-NEXT:    br label %[[LATCH]]
; NEW-PM:       [[LATCH]]:
; NEW-PM-NEXT:    [[EC:%.*]] = call i1 @cond()
; NEW-PM-NEXT:    br i1 [[EC]], label %[[EXIT:.*]], label %[[HEADER]]
; NEW-PM:       [[EXIT]]:
; NEW-PM-NEXT:    [[IV_LCSSA:%.*]] = phi i32 [ [[IV]], %[[LATCH]] ]
; NEW-PM-NEXT:    ret i32 [[IV_LCSSA]]
;
entry:
  %res = add i32 1, 10
  br label %header

header:
  %iv = phi i32 [ %res, %entry ], [ 0, %latch ]
  %ic = icmp eq i32 %res, 99
  br i1 %ic, label %then, label %latch

then:
  br label %then.2

then.2:
  call void @dostuff()
  br label %latch


latch:
  %ec = call i1 @cond()
  br i1 %ec, label %exit, label %header

exit:
  ret i32 %iv
}
;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; IR: {{.*}}
