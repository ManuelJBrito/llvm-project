; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; XFAIL: *
; RUN: opt < %s -passes=newgvn -verify-analysis-invalidation -S | FileCheck --check-prefixes=CHECK,MDEP %s

declare void @llvm.assume(i1)
declare void @use(i1)

define void @assume_true() {
; CHECK-LABEL: define void @assume_true() {
; CHECK-NEXT:    ret void
;
  call void @llvm.assume(i1 true)
  ret void
}

define void @assume_false() {
; CHECK-LABEL: define void @assume_false() {
; CHECK-NEXT:    store i8 poison, ptr null, align 1
; CHECK-NEXT:    ret void
;
  call void @llvm.assume(i1 false)
  ret void
}

define void @assume_arg(i1 %x) {
; CHECK-LABEL: define void @assume_arg(
; CHECK-SAME: i1 [[X:%.*]]) {
; CHECK-NEXT:    call void @llvm.assume(i1 [[X]])
; CHECK-NEXT:    call void @use(i1 true)
; CHECK-NEXT:    ret void
;
  call void @llvm.assume(i1 %x)
  call void @use(i1 %x)
  ret void
}

define void @assume_not_arg(i1 %x) {
; CHECK-LABEL: define void @assume_not_arg(
; CHECK-SAME: i1 [[X:%.*]]) {
; CHECK-NEXT:    [[XOR:%.*]] = xor i1 [[X]], true
; CHECK-NEXT:    call void @llvm.assume(i1 [[XOR]])
; CHECK-NEXT:    call void @use(i1 false)
; CHECK-NEXT:    ret void
;
  %xor = xor i1 %x, true
  call void @llvm.assume(i1 %xor)
  call void @use(i1 %x)
  ret void
}

define void @pr47496(i8 %x) {
; CHECK-LABEL: define void @pr47496(
; CHECK-SAME: i8 [[X:%.*]]) {
; CHECK-NEXT:    [[CMP:%.*]] = icmp slt i8 [[X]], 0
; CHECK-NEXT:    [[XOR:%.*]] = xor i1 [[CMP]], true
; CHECK-NEXT:    call void @llvm.assume(i1 [[XOR]])
; CHECK-NEXT:    call void @use(i1 false)
; CHECK-NEXT:    ret void
;
  %cmp = icmp slt i8 %x, 0
  %xor = xor i1 %cmp, true
  call void @llvm.assume(i1 %xor)
  call void @use(i1 %cmp)
  ret void
}
;; NOTE: These prefixes are unused and the list is autogenerated. Do not add tests below this line:
; MDEP: {{.*}}
