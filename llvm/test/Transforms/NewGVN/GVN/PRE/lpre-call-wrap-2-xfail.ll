; XFAIL: *
; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt -S -passes=newgvn -enable-load-pre < %s | FileCheck %s
;
; The partially redundant load in bb1 should be hoisted to "bb".  This comes
; from this C code (GCC PR 23455):
;   unsigned outcnt;  extern void flush_outbuf(void);
;   void bi_windup(unsigned char *outbuf, unsigned char bi_buf) {
;     outbuf[outcnt] = bi_buf;
;     if (outcnt == 16384)
;       flush_outbuf();
;     outbuf[outcnt] = bi_buf;
;   }
target datalayout = "e-p:32:32:32-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:32:64-f32:32:32-f64:32:64-v64:64:64-v128:128:128-a0:0:64-f80:128:128"
@outcnt = common global i32 0		; <ptr> [#uses=3]

define void @bi_windup(ptr %outbuf, i8 zeroext %bi_buf) nounwind {
; CHECK-LABEL: define void @bi_windup(
; CHECK-SAME: ptr [[OUTBUF:%.*]], i8 zeroext [[BI_BUF:%.*]]) #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:  [[ENTRY:.*]]:
; CHECK-NEXT:    [[TMP0:%.*]] = load i32, ptr @outcnt, align 4
; CHECK-NEXT:    [[TMP1:%.*]] = getelementptr i8, ptr [[OUTBUF]], i32 [[TMP0]]
; CHECK-NEXT:    store i8 [[BI_BUF]], ptr [[TMP1]], align 1
; CHECK-NEXT:    [[TMP2:%.*]] = load i32, ptr @outcnt, align 4
; CHECK-NEXT:    [[TMP3:%.*]] = icmp eq i32 [[TMP2]], 16384
; CHECK-NEXT:    br i1 [[TMP3]], label %[[BB:.*]], label %[[BB1:.*]]
; CHECK:       [[BB]]:
; CHECK-NEXT:    call void @flush_outbuf() #[[ATTR0]]
; CHECK-NEXT:    [[DOTPRE:%.*]] = load i32, ptr @outcnt, align 4
; CHECK-NEXT:    br label %[[BB1]]
; CHECK:       [[BB1]]:
; CHECK-NEXT:    [[TMP4:%.*]] = phi i32 [ [[DOTPRE]], %[[BB]] ], [ [[TMP2]], %[[ENTRY]] ]
; CHECK-NEXT:    [[TMP5:%.*]] = getelementptr i8, ptr [[OUTBUF]], i32 [[TMP4]]
; CHECK-NEXT:    store i8 [[BI_BUF]], ptr [[TMP5]], align 1
; CHECK-NEXT:    ret void
;
entry:
  %"alloca point" = bitcast i32 0 to i32		; <i32> [#uses=0]
  %0 = load i32, ptr @outcnt, align 4		; <i32> [#uses=1]
  %1 = getelementptr i8, ptr %outbuf, i32 %0		; <ptr> [#uses=1]
  store i8 %bi_buf, ptr %1, align 1
  %2 = load i32, ptr @outcnt, align 4		; <i32> [#uses=1]
  %3 = icmp eq i32 %2, 16384		; <i1> [#uses=1]
  br i1 %3, label %bb, label %bb1

bb:		; preds = %entry
  call void @flush_outbuf() nounwind
  br label %bb1

bb1:		; preds = %bb, %entry
  %4 = load i32, ptr @outcnt, align 4		; <i32> [#uses=1]
  %5 = getelementptr i8, ptr %outbuf, i32 %4		; <ptr> [#uses=1]
  store i8 %bi_buf, ptr %5, align 1
  ret void
}

declare void @flush_outbuf()
