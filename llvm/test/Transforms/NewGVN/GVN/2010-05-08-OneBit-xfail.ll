; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -passes=newgvn -S | FileCheck %s
; PR7052
; XFAIL: *

target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128-n8:16:32:64"
target triple = "x86_64-unknown-linux-gnu"

define i32 @main(i32 %argc, ptr nocapture %argv) personality ptr @__gxx_personality_v0 {
; CHECK-LABEL: define i32 @main(
; CHECK-SAME: i32 [[ARGC:%.*]], ptr captures(none) [[ARGV:%.*]]) personality ptr @__gxx_personality_v0 {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    store i32 undef, ptr undef, align 1
; CHECK-NEXT:    br i1 undef, label %[[K121_I_I:.*]], label %[[L117_I_I:.*]]
; CHECK:       [[L117_I_I]]:
; CHECK-NEXT:    invoke fastcc void @foo()
; CHECK-NEXT:            to [[DOTNOEXC5:label %.*]] unwind label %[[LANDING_PAD:.*]]
; CHECK:       [[_NOEXC5:.*:]]
; CHECK-NEXT:    unreachable
; CHECK:       [[K121_I_I]]:
; CHECK-NEXT:    br i1 undef, label %[[L129_I_I:.*]], label %[[K133_I_I:.*]]
; CHECK:       [[L129_I_I]]:
; CHECK-NEXT:    invoke fastcc void @foo()
; CHECK-NEXT:            to [[DOTNOEXC7:label %.*]] unwind label %[[LANDING_PAD]]
; CHECK:       [[_NOEXC7:.*:]]
; CHECK-NEXT:    unreachable
; CHECK:       [[K133_I_I]]:
; CHECK-NEXT:    [[TMP0:%.*]] = load i1, ptr undef, align 1
; CHECK-NEXT:    br i1 [[TMP0]], label %[[K151_I_I:.*]], label %[[L147_I_I:.*]]
; CHECK:       [[L147_I_I]]:
; CHECK-NEXT:    invoke fastcc void @foo()
; CHECK-NEXT:            to [[DOTNOEXC10:label %.*]] unwind label %[[LANDING_PAD]]
; CHECK:       [[_NOEXC10:.*:]]
; CHECK-NEXT:    unreachable
; CHECK:       [[K151_I_I]]:
; CHECK-NEXT:    ret i32 0
; CHECK:       [[LANDING_PAD]]:
; CHECK-NEXT:    [[EXN:%.*]] = landingpad { ptr, i32 }
; CHECK-NEXT:            cleanup
; CHECK-NEXT:    switch i32 undef, label %[[FIN:.*]] [
; CHECK-NEXT:      i32 1, label %[[CATCH1:.*]]
; CHECK-NEXT:      i32 2, label %[[CATCH:.*]]
; CHECK-NEXT:    ]
; CHECK:       [[FIN]]:
; CHECK-NEXT:    unreachable
; CHECK:       [[CATCH]]:
; CHECK-NEXT:    ret i32 1
; CHECK:       [[CATCH1]]:
; CHECK-NEXT:    ret i32 2
;
entry:
  %0 = getelementptr inbounds i8, ptr undef, i64 5    ; <ptr> [#uses=1]
  store i32 undef, ptr %0, align 1
  br i1 undef, label %k121.i.i, label %l117.i.i

l117.i.i:                                         ; preds = %entry
  invoke fastcc void @foo()
  to label %.noexc5 unwind label %landing_pad

.noexc5:                                          ; preds = %l117.i.i
  unreachable

k121.i.i:                                         ; preds = %entry
  br i1 undef, label %l129.i.i, label %k133.i.i

l129.i.i:                                         ; preds = %k121.i.i
  invoke fastcc void @foo()
  to label %.noexc7 unwind label %landing_pad

.noexc7:                                          ; preds = %l129.i.i
  unreachable

k133.i.i:                                         ; preds = %k121.i.i
  %1 = getelementptr i8, ptr undef, i64 5             ; <ptr> [#uses=1]
  %2 = load i1, ptr %1                                ; <i1> [#uses=1]
  br i1 %2, label %k151.i.i, label %l147.i.i

l147.i.i:                                         ; preds = %k133.i.i
  invoke fastcc void @foo()
  to label %.noexc10 unwind label %landing_pad

.noexc10:                                         ; preds = %l147.i.i
  unreachable

k151.i.i:                                         ; preds = %k133.i.i
  ret i32 0

landing_pad:                                      ; preds = %l147.i.i, %l129.i.i, %l117.i.i
  %exn = landingpad {ptr, i32}
  cleanup
  switch i32 undef, label %fin [
  i32 1, label %catch1
  i32 2, label %catch
  ]

fin:                                              ; preds = %landing_pad
  unreachable

catch:                                            ; preds = %landing_pad
  ret i32 1

catch1:                                           ; preds = %landing_pad
  ret i32 2
}

declare fastcc void @foo()

declare i32 @__gxx_personality_v0(...)
