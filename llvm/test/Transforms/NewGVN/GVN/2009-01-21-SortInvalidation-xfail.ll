; XFAIL: *
; NOTE: Assertions have been autogenerated by utils/update_test_checks.py UTC_ARGS: --version 5
; RUN: opt < %s -passes=newgvn -S | FileCheck %s
; PR3358
target datalayout = "e-p:64:64:64-i1:8:8-i8:8:8-i16:16:16-i32:32:32-i64:64:64-f32:32:32-f64:64:64-v64:64:64-v128:128:128-a0:0:64-s0:64:64-f80:128:128"
target triple = "x86_64-unknown-linux-gnu"
  %struct.re_pattern_buffer = type { ptr, i64, i64, i64, ptr, ptr, i64, i8 }
  %struct.re_registers = type { i32, ptr, ptr }

define fastcc i32 @byte_re_match_2_internal(ptr nocapture %bufp, ptr %string1, i32 %size1, ptr %string2, i32 %size2, i32 %pos, ptr %regs, i32 %stop) nounwind {
; CHECK-LABEL: define fastcc i32 @byte_re_match_2_internal(
; CHECK-SAME: ptr captures(none) [[BUFP:%.*]], ptr [[STRING1:%.*]], i32 [[SIZE1:%.*]], ptr [[STRING2:%.*]], i32 [[SIZE2:%.*]], i32 [[POS:%.*]], ptr [[REGS:%.*]], i32 [[STOP:%.*]]) #[[ATTR0:[0-9]+]] {
; CHECK-NEXT:  [[ENTRY:.*:]]
; CHECK-NEXT:    br label %[[BB159:.*]]
; CHECK:       [[SUCCEED_LABEL:.*]]:
; CHECK-NEXT:    ret i32 0
; CHECK:       [[BB159]]:
; CHECK-NEXT:    switch i32 0, label %[[BB661:.*]] [
; CHECK-NEXT:      i32 0, label %[[BB159]]
; CHECK-NEXT:      i32 1, label %[[SUCCEED_LABEL]]
; CHECK-NEXT:      i32 13, label %[[BB159]]
; CHECK-NEXT:      i32 14, label %[[BB159]]
; CHECK-NEXT:      i32 16, label %[[BB411:.*]]
; CHECK-NEXT:      i32 24, label %[[BB622:.*]]
; CHECK-NEXT:      i32 28, label %[[BB543:.*]]
; CHECK-NEXT:    ]
; CHECK:       [[BB411]]:
; CHECK-NEXT:    br label %[[BB411]]
; CHECK:       [[BB543]]:
; CHECK-NEXT:    br i1 false, label %[[BB549:.*]], label %[[BB550:.*]]
; CHECK:       [[BB549]]:
; CHECK-NEXT:    br label %[[BB554:.*]]
; CHECK:       [[BB550]]:
; CHECK-NEXT:    br i1 false, label %[[BB550_BB554_CRIT_EDGE:.*]], label %[[BB552:.*]]
; CHECK:       [[BB550_BB554_CRIT_EDGE]]:
; CHECK-NEXT:    br label %[[BB554]]
; CHECK:       [[BB552]]:
; CHECK-NEXT:    br label %[[BB554]]
; CHECK:       [[BB554]]:
; CHECK-NEXT:    br i1 false, label %[[BB554_BB159_CRIT_EDGE:.*]], label %[[BB661]]
; CHECK:       [[BB554_BB159_CRIT_EDGE]]:
; CHECK-NEXT:    br label %[[BB159]]
; CHECK:       [[BB622]]:
; CHECK-NEXT:    br label %[[BB622]]
; CHECK:       [[BB661]]:
; CHECK-NEXT:    br label %[[BB664:.*]]
; CHECK:       [[BB664]]:
; CHECK-NEXT:    br i1 false, label %[[BB664_BB159_CRIT_EDGE:.*]], label %[[BB664]]
; CHECK:       [[BB664_BB159_CRIT_EDGE]]:
; CHECK-NEXT:    br label %[[BB159]]
;
entry:
  br label %bb159

succeed_label:		; preds = %bb159
  ret i32 0

bb159:		; preds = %bb664, %bb554, %bb159, %bb159, %bb159, %entry
  %d.0 = phi ptr [ null, %entry ], [ %d.0, %bb159 ], [ %d.0, %bb554 ], [ %d.0, %bb159 ], [ %d.0, %bb159 ], [ %d.12, %bb664 ]		; <ptr> [#uses=5]
  switch i32 0, label %bb661 [
  i32 0, label %bb159
  i32 1, label %succeed_label
  i32 13, label %bb159
  i32 14, label %bb159
  i32 16, label %bb411
  i32 24, label %bb622
  i32 28, label %bb543
  ]

bb411:		; preds = %bb411, %bb159
  br label %bb411

bb543:		; preds = %bb159
  br i1 false, label %bb549, label %bb550

bb549:		; preds = %bb543
  br label %bb554

bb550:		; preds = %bb543
  br i1 false, label %bb554, label %bb552

bb552:		; preds = %bb550
  %0 = load i8, ptr %d.0, align 8		; <i8> [#uses=0]
  br label %bb554

bb554:		; preds = %bb552, %bb550, %bb549
  br i1 false, label %bb159, label %bb661

bb622:		; preds = %bb622, %bb159
  br label %bb622

bb661:		; preds = %bb554, %bb159
  %d.12 = select i1 false, ptr null, ptr null		; <ptr> [#uses=1]
  br label %bb664

bb664:		; preds = %bb664, %bb661
  br i1 false, label %bb159, label %bb664
}
